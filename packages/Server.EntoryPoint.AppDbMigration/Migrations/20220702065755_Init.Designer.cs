// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Repository.AppDb;

#nullable disable

namespace Server.EntoryPoint.AppDbMigration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220702065755_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Repository.AppDb.Entity.BacklogTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActualEffort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("InitalEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlanedEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanedEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlanedStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("BacklogTask");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Epic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActualEffort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InitalEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlanedEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanedEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlanedStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Epic");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActualEffort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EpicId")
                        .HasColumnType("int");

                    b.Property<int>("InitalEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlanedEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanedEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlanedStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EpicId");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActualEffort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InitalEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("PlanedEffort")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanedEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlanedStart")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.BacklogTask", b =>
                {
                    b.HasOne("Server.Repository.AppDb.Entity.Feature", "Feature")
                        .WithMany("BacklogTasks")
                        .HasForeignKey("FeatureId");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Epic", b =>
                {
                    b.HasOne("Server.Repository.AppDb.Entity.Project", "Project")
                        .WithMany("Epics")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Feature", b =>
                {
                    b.HasOne("Server.Repository.AppDb.Entity.Epic", "Epic")
                        .WithMany("Features")
                        .HasForeignKey("EpicId");

                    b.Navigation("Epic");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Project", b =>
                {
                    b.HasOne("Server.Repository.AppDb.Entity.Organization", "Organization")
                        .WithMany("Projects")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Epic", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Feature", b =>
                {
                    b.Navigation("BacklogTasks");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Organization", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Server.Repository.AppDb.Entity.Project", b =>
                {
                    b.Navigation("Epics");
                });
#pragma warning restore 612, 618
        }
    }
}
