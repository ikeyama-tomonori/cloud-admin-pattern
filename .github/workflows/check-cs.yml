name: Check for .NET projects.
on:
    push:
        branches:
            - main
        paths:
            - 'packages/Server.*/**'
            - '.github/workflows/check-cs.yml'
    pull_request:
        types: [opened, synchronize, reopened]
        paths:
            - 'packages/Server.*/**'
            - '.github/workflows/check-cs.yml'
jobs:
    check:
        name: Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Run docker for test
              shell: bash
              run: docker-compose up -d
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 1.11
            - name: Setup .NET 6
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 6.0.x
            - name: Restore tools
              run: dotnet tool restore
            - name: Format check
              run: |
                  dotnet format style --verify-no-changes
                  dotnet format analyzers --verify-no-changes
            - name: Build for check
              run: dotnet build -c Release -warnaserror
            - name: Run test
              run: |
                  dotnet run --project packages/Server.Main.AppDbMigration
                  dotnet test -c Release --no-build --collect:"Code Coverage" --logger:xunit
                  dotnet coverage merge -f xml -o coverage.xml packages/**/TestResults/*/*.coverage
            - name: Build and analyze
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  dotnet sonarscanner begin /k:"ikeyama-tomonori_cloud-admin-pattern_cs" /o:"ikeyama-tomonori" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"  /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.xunit.reportsPaths="**/TestResults.xml" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
                  dotnet build
                  dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
